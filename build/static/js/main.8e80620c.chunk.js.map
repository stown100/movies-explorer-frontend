{"version":3,"sources":["componenst/ProtectedRoute/ProtectedRoute.js","componenst/ProtectedRouteAuth.js/ProtectedRouteAuth.js","componenst/Footer/Footer.js","images/greenlogo.svg","componenst/HeaderMain/HeaderMain.js","images/weblogo.svg","images/avatar.jpg","images/pointer.svg","images/closeicon.svg","componenst/Burger/Burger.js","componenst/HeaderAuthorize/HeaderAuthorize.js","componenst/Main/Main.js","componenst/ErrorHandler/ErrorHandler.js","componenst/UseValidation/UseValidation.js","componenst/UseInput/UseInput.js","componenst/From/Form.js","componenst/Register/Register.js","componenst/Login/Login.js","componenst/Header/Header.js","componenst/Preloader/Preloader.js","componenst/MoviesCard/MoviesCard.js","componenst/AllMoviesCard/AllMoviesCard.js","images/loupe.svg","componenst/Movies/Movies.js","images/removeCardIcon.svg","componenst/MyMoviesCard/MyMoviesCard.js","componenst/SavedMovies/SavedMovies.js","contexts/CurrentUserContext.js","componenst/Profile/Profile.js","utils/Auth.js","utils/MoviesApi.js","utils/MainApi.js","componenst/App/App.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","Component","component","rest","render","props","loggedIn","to","ProtectedRouteAuth","history","useHistory","push","Footer","className","href","target","rel","Date","getFullYear","HeaderMain","src","logo","alt","Burger","React","useState","toggle","setToggle","closes","setCloses","onClick","Close","HeaderAuthorize","Main","Logo","Avatar","Pointer","ErrorHandler","goBack","UseValidation","value","validations","isEmpty","setEmpty","minLengthError","setMinLengthError","maxLengthError","setMaxLengthError","emailError","setEmailError","inputValid","setInputValid","useEffect","validation","length","test","String","toLowerCase","UseInput","initialValue","setValue","isDirty","setIsDirty","valid","onChange","e","onBlur","Form","children","title","onSubmit","text","link","action","Register","onRegister","nameValidation","emailValidation","isEmail","passwordValidation","nameConfigValid","emailConfigValid","passwordConfigValid","name","setName","email","setEmail","password","setPassword","handleSubmit","a","preventDefault","then","catch","err","console","log","localStorage","getItem","required","type","disabled","Login","onLogin","Header","Preloader","MoviesCard","duration","image","nameRU","trailerLink","AllMoviesCard","country","created_at","description","director","nameEN","updated_at","year","handleAddPlaceSubmit","movieId","trailer","thumbnail","removeCard","isLike","savedMovies","some","i","classNameRadio","Movies","moviesInfo","visibleData","setVisibleData","search","setSearch","textValid","preload","onButton","setOnButton","setTextState","textState","setPreload","index","setIndex","arr","slice","filtredMovise","filter","movie","includes","shortFilmsArray","el","shortFilmsArrayAndSearch","map","id","url","handlerSearchClick","noValidate","placeholder","imgInp","MyMoviesCard","owner","_id","removeCardIcon","SavedMovies","setVisibleSaveData","visibleSaveData","arrLength","classNameButton","tests","CurrentUserContext","createContext","Profile","onSignOut","handleUpdateUser","confirm","confirmError","setConfirm","setConfirmError","currentUser","useContext","BASE_URL","handleResponse","res","ok","json","Promise","reject","status","api","headers","_handleResponse","this","token","fetch","method","mainApi","authorization","body","JSON","stringify","data","App","setLoggedIn","setMoviesInfo","setSavedMovies","setCurrentUser","userData","setUserData","location","pathname","textSave","textSaveValid","all","getUserInfo","getInitialMovies","error","parse","setItem","resolve","getSavedMovies","movies","myId","filterSaveMovies","movieToSave","addMovie","newCard","deleteMovies","auth","jwt","resEmail","resName","join","Auth","Error","Provider","exact","path","setUserInfo","removeItem","statusCode","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e80620c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n// этот компонент принимает другой компонент в качестве пропса\r\n// он также может взять неограниченное число пропсов и передать их новому компоненту\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route {...rest} render={props => rest.loggedIn ? <Component {...props} {...rest} /> : <Redirect to='/' />} />\r\n)}\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\n\r\n\r\n// этот компонент принимает другой компонент в качестве пропса\r\n// он также может взять неограниченное число пропсов и передать их новому компоненту\r\n\r\nconst ProtectedRouteAuth = ({ component: Component, ...rest }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Route {...rest} render={props => !rest.loggedIn ? <Component {...props} {...rest} /> : history.push('/')} />\r\n    // Почему-то в этом месте не работает <Redirect to='/' />\r\n)}\r\n\r\nexport default ProtectedRouteAuth;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">Учебный проект Яндекс.Практикум х BeatFilm</p>\r\n            <hr className=\"footer__br\"></hr>\r\n            <div className=\"footer__bot\">\r\n                <div className=\"footer__bot_buttons\">\r\n                    <a href=\"https://practicum.yandex.ru/web/\" className=\"footer__bot_buttons-child\" target=\"_blank\" rel=\"noreferrer\">Яндекс.Практикум</a>\r\n                    <a href=\"https://github.com/stown100\" className=\"footer__bot_buttons-child\" target=\"_blank\" rel=\"noreferrer\">Github</a>\r\n                    <a href=\"https://www.instagram.com/borodulin_developer/\" className=\"footer__bot_buttons-child\" target=\"_blank\" rel=\"noreferrer\">Instagtam</a>\r\n                    <p className=\"footer__bot-date\">&copy; {new Date().getFullYear()}</p>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/greenlogo.dcc93f5f.svg\";","import React from 'react';\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport logo from '../../images/greenlogo.svg'\r\n\r\nfunction HeaderMain() {\r\n    return (\r\n        <Route>\r\n            <header className=\"header-main\">\r\n                <img className=\"header-main__logo\" src={logo} alt=\"logo\"></img>\r\n                <div className=\"header-main__authorized\">\r\n                    <button className=\"header-main__authorized_button\">\r\n                <Link to=\"signup\" className=\"header-main__authorized_button-register\">Регистрация</Link>\r\n                </button>\r\n\r\n                    <button className=\"header-main__authorized_button\">\r\n                <Link to=\"signin\" className=\"header-main__authorized_button-enter\">Войти</Link>\r\n                </button>\r\n\r\n                </div>\r\n            </header>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default HeaderMain;","export default __webpack_public_path__ + \"static/media/weblogo.0e756d9d.svg\";","export default __webpack_public_path__ + \"static/media/avatar.ba79909b.jpg\";","export default __webpack_public_path__ + \"static/media/pointer.78c4c42a.svg\";","export default __webpack_public_path__ + \"static/media/closeicon.4828fddb.svg\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Close from '../../images/closeicon.svg'\r\n\r\nconst Burger = () => {\r\n    const [toggle, setToggle] = React.useState(false);\r\n    const [closes, setCloses] = React.useState(false);\r\n    return (\r\n        <>\r\n            <div className=\"burger\" onClick={() => {\r\n                setToggle(true)\r\n                setCloses(false)\r\n            }}>\r\n                {/* <span className={`span  ${toggle && \"span_hidden\"} ${closes && \"span_hidden\"}`}></span> */}\r\n                <span className={toggle ? 'span_hidden' : 'span'}></span>\r\n            </div>\r\n            <div className={`burger__block ${closes && \"burger__block_hidden\"} ${toggle && \"burger__block_visible\"}`}>\r\n                <img className=\"burger__close\" src={Close} alt=\"close\" onClick={() => {\r\n                    setCloses(true)\r\n                    setToggle(false)\r\n                }}>\r\n                </img>\r\n                <div className=\"burger__block_text\">\r\n                    <button className=\"burger__block_text-text\"><Link to=\"/\" className=\"header__link\">Главная</Link></button>\r\n                    <button className=\"burger__block_text-text\"><Link to=\"movies\" className=\"header__link\">Фильмы</Link></button>\r\n                    <button className=\"burger__block_text-text\"><Link to=\"saved-movies\" className=\"header__link\">Сохранённые фильмы</Link></button>\r\n                </div>\r\n                <button className=\"burger__block_button-account header__black_account\"><Link to=\"profile\" className=\"header__link\">Аккаунт</Link></button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Burger;","import { Route, Link } from \"react-router-dom\";\r\nimport logo from '../../images/greenlogo.svg'\r\nimport Burger from '../Burger/Burger';\r\n\r\nfunction HeaderAuthorize() {\r\n    return (\r\n        <Route>\r\n            <header className=\"header_authorize\">\r\n                <Link to=\"/\" className=\"header__logo\">\r\n                    <img className=\"header__logo\" src={logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div className=\"header__film\">\r\n                    <button className=\"header__films_authorize\"><Link to=\"movies\" className=\"header__link\">Фильмы</Link></button>\r\n                    <button className=\"header__save-films_authorize\"><Link to=\"saved-movies\" className=\"header__link\">Сохранённые фильмы</Link></button>\r\n                    <button className=\"header__account_authorize\"><Link to=\"profile\" className=\"header__link\">Аккаунт</Link></button>\r\n                </div>\r\n                <Burger />\r\n            </header>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default HeaderAuthorize;","import React from 'react';\r\nimport Footer from '../Footer/Footer';\r\nimport HeaderMain from '../HeaderMain/HeaderMain';\r\nimport Logo from '../../images/weblogo.svg';\r\nimport Avatar from '../../images/avatar.jpg';\r\nimport Pointer from '../../images/pointer.svg';\r\nimport HeaderAuthorize from '../HeaderAuthorize/HeaderAuthorize';\r\n\r\nfunction Main({ loggedIn }) {\r\n    return (\r\n        <main className=\"main\">\r\n            {loggedIn ? <HeaderAuthorize /> : <HeaderMain />}\r\n            <div className=\"promo\">\r\n                <img className=\"promo__logo\" src={Logo} alt=\"web-logo\"></img>\r\n                <h1 className=\"promo__title\">\r\n                    Учебный проект студента факультета\r\n                    <br />\r\n                    Веб-разработки.\r\n                </h1>\r\n                <p className=\"promo__text\">\r\n                    Листайте ниже, чтобы узнать больше про этот проект и его создателя.\r\n                </p>\r\n                <button className=\"promo__button\">\r\n                    <a href=\"https://practicum.yandex.ru/web/\" className=\"promo__button_link\" target=\"_blank\" rel=\"noreferrer\">Узнать больше</a>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"about-project\">\r\n                <h4 className=\"about-project__title\">О проекте</h4>\r\n                <hr className=\"about-project__hr\" />\r\n                <div className=\"about-project__text-block\">\r\n                    <h5 className=\"about-project__text-block_subtitle\">Дипломный проект влючил 5 этапов</h5>\r\n                    <p className=\"about-project__text-block_text\">Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.</p>\r\n                    <h5 className=\"about-project__text-block_subtitle\">На выполнение диплома ушло 5 недель</h5>\r\n                    <p className=\"about-project__text-block_text\">У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.</p>\r\n                </div>\r\n                <div className=\"about-project__front-back\">\r\n                    <div className=\"about-project__front-back_back\">1 неделя</div>\r\n                    <div className=\"about-project__front-back_front\">4 недели</div>\r\n                </div>\r\n                <div className=\"about-project__figcaption\">\r\n                    <p className=\"about-project__figcaption_text1\">Back-end</p>\r\n                    <p className=\"about-project__figcaption_text2\">Front-end</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"techs\">\r\n                <h4 className=\"techs__title about-project__title\">Технологии</h4>\r\n                <hr className=\"techs__hr about-project__hr\" />\r\n                <h3 className=\"techs__subtitle\">7 технологий</h3>\r\n                <p className=\"techs__text\">На курсе веб-разработки я освоил технологии, которые применил в дипломном проекте.</p>\r\n                <div className=\"techs__blocks\">\r\n                    <div className=\"techs__blocks_technology\">HTML</div>\r\n                    <div className=\"techs__blocks_technology\">CSS</div>\r\n                    <div className=\"techs__blocks_technology\">JS</div>\r\n                    <div className=\"techs__blocks_technology\">React</div>\r\n                    <div className=\"techs__blocks_technology\">Git</div>\r\n                    <div className=\"techs__blocks_technology\">Express.js</div>\r\n                    <div className=\"techs__blocks_technology\">mongoDB</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"about-me\">\r\n                <h4 className=\"about-me__title about-project__title\">Студент</h4>\r\n                <hr className=\"about-me__hr about-project__hr\" />\r\n                <div className=\"about-me__me\">\r\n                    <img className=\"about-me__me_avatar\" src={Avatar} alt=\"Foto\" />\r\n                    <h3 className=\"about-me__me_name\">Сергей</h3>\r\n                    <h5 className=\"about-me__me_title\">Фронтенд-разработчик, 26 лет</h5>\r\n                    <p className=\"about-me__me_text\">\r\n                        Хочу развиваться в IT сфере, в частности, в web-разработке. Нравится работать в команде.\r\n                        Хочется делать полезные, удобные и простые в использовании сервисы. Мне нравится web-разработка.\r\n                        Помимо курсов я смотрю обучающие видео, читаю документацию и практикуюсь при помощи решения задач по JS.\r\n                        До этого долго работал в сфере активных продаж. Легко нахожу общий язык с людьми.\r\n                        Не люблю опаздывать на работу, так как уважительно отношусь к своим коллегам.\r\n                        Дополнительно: в свободное время катаюсь на велосипеде, занимаюсь в зале, люблю читать, играть в пинг-понг и волейбол.\r\n                    </p>\r\n                    <div className=\"about-me__me_links\">\r\n                        <a href=\"https://www.instagram.com/borodulin_developer/\" className=\"about-me__me_links1 about-me__me_links-inst\" target=\"_blank\" rel=\"noreferrer\">Instagram</a>\r\n                        <a href=\"https://github.com/stown100\" className=\"about-me__me_links1 about-me__me_links-git\" target=\"_blank\" rel=\"noreferrer\">Github</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"portfolio\">\r\n                <h6 className=\"portfolio__title\">Портфолио</h6>\r\n                <div className=\"portfolio__block\">\r\n                    <a href=\"https://github.com/stown100/how-to-learn\" className=\"portfolio__block_link\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Статичный сайт\r\n                        <img className=\"portfolio__block_link-pointer\" src={Pointer} alt=\"pointer\"></img>\r\n                    </a>\r\n                    <a href=\"https://stown100.github.io/Russian-travel/\" className=\"portfolio__block_link\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Адаптивный сайт\r\n                        <img className=\"portfolio__block_link-pointer\" src={Pointer} alt=\"pointer\"></img>\r\n                    </a>\r\n                    <a href=\"https://github.com/stown100/react-mesto-api-full\" className=\"portfolio__block_link\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Одностраничное приложение\r\n                        <img className=\"portfolio__block_link-pointer\" src={Pointer} alt=\"pointer\"></img>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Route, useHistory } from \"react-router-dom\";\r\n\r\nfunction ErrorHandler() {\r\n    const history = useHistory()\r\n    function goToPreviousPath() {\r\n        history.goBack();\r\n        history.goBack();\r\n        history.goBack();\r\n      }\r\n    \r\n    return (\r\n        <Route>\r\n            <div className=\"error\">\r\n                <h2 className=\"error__number\">404</h2>\r\n                <p className=\"error__text\">Страница не найдена</p>\r\n                <button className=\"error__link\" onClick={goToPreviousPath}>Назад</button>\r\n            </div>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ErrorHandler;","import React from \"react\";\r\n\r\nconst UseValidation = (value, validations) => {\r\n    const [isEmpty, setEmpty] = React.useState(true);\r\n    const [minLengthError, setMinLengthError] = React.useState(false);\r\n    const [maxLengthError, setMaxLengthError] = React.useState(false);\r\n    const [emailError, setEmailError] = React.useState(false);\r\n    const [inputValid, setInputValid] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLengthError':\r\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\r\n                    break;\r\n                case 'isEmpty':\r\n                    value ? setEmpty(false) : setEmpty(true)\r\n                    break;\r\n                case 'maxLengthError':\r\n                    value.length > validations[validation] ? setMaxLengthError(true) : setMaxLengthError(false)\r\n                    break;\r\n                case 'isEmail':\r\n                    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\\\\\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\\\\\"]{2,})$/i;\r\n                    re.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    //Валидация кнопки\r\n    React.useEffect(() => {\r\n        if (isEmpty || maxLengthError || minLengthError || emailError) {\r\n            setInputValid(false);\r\n        } else {\r\n            setInputValid(true);\r\n        }\r\n    }, [isEmpty, maxLengthError, minLengthError, emailError])\r\n\r\n    return {\r\n        isEmpty,\r\n        minLengthError,\r\n        maxLengthError,\r\n        emailError,\r\n        inputValid,\r\n    }\r\n}\r\n\r\nexport default UseValidation;","import React from \"react\";\r\nimport UseValidation from \"../UseValidation/UseValidation\";\r\n\r\nconst UseInput = (initialValue, validations) => {\r\n    const [value, setValue] = React.useState(initialValue);\r\n    const [isDirty, setIsDirty] = React.useState(false);\r\n    const valid = UseValidation(value, validations)\r\n\r\n    //Обрабатывает изменения внутри инпута\r\n    const onChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n    //Отрабатывает в тот момент, когла пользователь покинул инпут\r\n    const onBlur = (e) => {\r\n        setIsDirty(true)\r\n    }\r\n    return {\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        isDirty,\r\n        ...valid,\r\n    }\r\n}\r\n\r\nexport default UseInput;","import { Link } from \"react-router-dom\";\r\nimport Logo from \"../../images/greenlogo.svg\";\r\n\r\n\r\nconst Form = ({ children, title, onSubmit, text, link, to }) => {\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"register__container\">\r\n                <form className=\"form\" onSubmit={onSubmit} action=\"#\">\r\n                    <Link to=\"/\" className=\"header__logo\">\r\n                        <img className=\"header__logo register__logo\" src={Logo} alt=\"logo\"></img>\r\n                    </Link>\r\n                    <h2 className=\"register__title\">{title}</h2>\r\n                    {children}\r\n                    <p className=\"register__text\">{text}<Link to={to} className=\"register__link\">{link}</Link></p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UseInput from \"../UseInput/UseInput\";\r\nimport Form from \"../From/Form\";\r\n\r\nconst Register = ({ onRegister }) => {\r\n    const nameValidation = UseInput('', { isEmpty: true, minLengthError: 2, maxLengthError: 30 });\r\n    const emailValidation = UseInput('', { isEmpty: true, minLengthError: 3, isEmail: true });\r\n    const passwordValidation = UseInput('', { isEmpty: true, minLengthError: 2, maxLengthError: 30 });\r\n    const nameConfigValid = ((nameValidation.isDirty && nameValidation.isEmpty) || (nameValidation.isDirty && nameValidation.minLengthError) || (nameValidation.isDirty && nameValidation.maxLengthError));\r\n    const emailConfigValid = ((emailValidation.isDirty && emailValidation.isEmpty) || (emailValidation.isDirty && emailValidation.minLengthError) || (emailValidation.isDirty && emailValidation.emailError));\r\n    const passwordConfigValid = ((passwordValidation.isDirty && passwordValidation.isEmpty) || (passwordValidation.isDirty && passwordValidation.minLengthError) || (passwordValidation.isDirty && passwordValidation.maxLengthError));\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        onRegister({ name, email, password })\r\n            .then(() => history.push('/signin'))\r\n            .then(() => history.push('/movies'))\r\n            .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (localStorage.getItem('jwt')) {\r\n            history.push('/movies');\r\n        }\r\n    }, [history]);\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} title=\"Добро пожаловать\" text=\"Вы уже зарегистрированны?\" link=\"Войти\" to=\"signin\">\r\n            <p className=\"form__text-input\">Имя</p>\r\n            <input\r\n                className={nameConfigValid\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={e => {\r\n                    nameValidation.onChange(e)\r\n                    setName(e.target.value)}}\r\n                onBlur={e => nameValidation.onBlur(e)}\r\n            />\r\n            {nameConfigValid && <span className=\"form__input_span\">\r\n                Введите имя от 2 до 30 символов\r\n            </span>}\r\n\r\n            <p className=\"form__text-input\">E-mail</p>\r\n            <input\r\n                className={emailConfigValid\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={e => {\r\n                    emailValidation.onChange(e)\r\n                    setEmail(e.target.value)}}\r\n                    onBlur={e => emailValidation.onBlur(e)}\r\n            />\r\n            {emailConfigValid && <span className=\"form__input_span\">\r\n                Введите email адрес.\r\n            </span>}\r\n\r\n            <p className=\"form__text-input\">Пароль</p>\r\n            <input\r\n                className={passwordConfigValid\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={e => {\r\n                    passwordValidation.onChange(e)\r\n                    setPassword(e.target.value)}}\r\n                    onBlur={e => passwordValidation.onBlur(e)}\r\n            />\r\n            {passwordConfigValid && <span className=\"form__input_span\">\r\n                Введите пароль от 2 до 30 символов\r\n            </span>}\r\n\r\n            <button disabled={!emailValidation.inputValid || !passwordValidation.inputValid} type=\"submit\"\r\n                className={(nameConfigValid || emailConfigValid || passwordConfigValid) ? 'form__button_disabled' : 'form__button'}>\r\n                Зарегестрироваться\r\n            </button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Register;","import { useHistory } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport UseInput from \"../UseInput/UseInput\";\r\nimport Form from \"../From/Form\";\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const emailValidation = UseInput('', { isEmpty: true, minLengthError: 3, isEmail: true });\r\n    const passwordValidation = UseInput('', { isEmpty: true, minLengthError: 2, maxLengthError: 30 });\r\n    const emailConfigValid = ((emailValidation.isDirty && emailValidation.isEmpty) || (emailValidation.isDirty && emailValidation.minLengthError) || (emailValidation.isDirty && emailValidation.emailError));\r\n    const passwordConfigValid = ((passwordValidation.isDirty && passwordValidation.isEmpty) || (passwordValidation.isDirty && passwordValidation.minLengthError) || (passwordValidation.isDirty && passwordValidation.maxLengthError));\r\n    const history = useHistory();\r\n\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        return onLogin({ email, password })\r\n            .then(() => history.push('/movies'))\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} title=\"Рады видеть!\" text=\"Ещё не зарегестрированы?\" link=\"Регистрация\" to=\"signup\">\r\n            <p className=\"form__text-input\">E-mail</p>\r\n            <input\r\n                className={emailConfigValid\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={e => {\r\n                    emailValidation.onChange(e)\r\n                    setEmail(e.target.value)\r\n                }}\r\n                onBlur={e => emailValidation.onBlur(e)}\r\n            />\r\n            {emailConfigValid && <span className=\"form__input_span\">\r\n                Введите email адрес.\r\n            </span>}\r\n            <p className=\"form__text-input\">Пароль</p>\r\n            <input\r\n                className={passwordConfigValid\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={e => {\r\n                    passwordValidation.onChange(e)\r\n                    setPassword(e.target.value)\r\n                }}\r\n                onBlur={e => passwordValidation.onBlur(e)}\r\n            />\r\n            {passwordConfigValid && <span className=\"form__input_span\">\r\n                Введите пароль от 2 до 30 символов\r\n            </span>}\r\n            <button disabled={!emailValidation.inputValid || !passwordValidation.inputValid} type=\"submit\"\r\n                className={(emailConfigValid || passwordConfigValid) ? 'form__button_disabled' : 'form__button'}>\r\n                Войти\r\n            </button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login;","import { Route, Link } from \"react-router-dom\";\r\nimport logo from '../../images/greenlogo.svg'\r\nimport Burger from '../Burger/Burger';\r\n\r\nfunction Header() {\r\n    return (\r\n        <Route>\r\n            <header className=\"header\">\r\n                <Link to=\"/\" className=\"header__logo\">\r\n                    <img className=\"header__logo\" src={logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div className=\"header__film\">\r\n                    <button className=\"header__films\"><Link to=\"movies\" className=\"header__link\">Фильмы</Link></button>\r\n                    <button className=\"header__save-films\"><Link to=\"saved-movies\" className=\"header__link\">Сохранённые фильмы</Link></button>\r\n                    <button className=\"header__account\"><Link to=\"profile\" className=\"header__link\">Аккаунт</Link></button>\r\n                </div>\r\n                <Burger />\r\n            </header>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"preloader__container\">\r\n                <span className=\"preloader__round\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader\r\n","import React from 'react';\r\nconst MoviesCard = ({ duration, image, nameRU, trailerLink, children }) => {\r\n    return (\r\n        <article className=\"movies-card__elem\">\r\n            <a href={trailerLink} target='_blank' rel='noreferrer'>\r\n                <img className=\"movies-card__elem_img\" alt={nameRU} src={image}></img>\r\n            </a>\r\n            <div className=\"movies-card__elem_title\">\r\n                <h6 className=\"movies-card__elem_title-text\">{nameRU}</h6>\r\n                {children}\r\n            </div>\r\n            <p className=\"movies-card__elem_time\">{duration}</p>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default MoviesCard;","import React from 'react';\r\nimport MoviesCard from '../MoviesCard/MoviesCard';\r\n\r\nconst AllMoviesCard = ({ country, created_at, description, director, duration, image, nameEN, nameRU,\r\n    trailerLink, updated_at, year, handleAddPlaceSubmit, movieId, trailer, thumbnail, removeCard, savedMovies }) => {\r\n\r\n    // Проверка, есть ли в сохранённых фильмах movieId\r\n    const isLike = savedMovies.some(i => i.movieId === movieId);\r\n    const classNameRadio = `movies-card__elem_title-button  \r\n    ${isLike && \"movies-card__elem_title-button-on\"}`\r\n\r\n        // Фукция добавления/удаления карточки\r\n    const addOrRemoveMovies = () => {\r\n        if (isLike) {\r\n            removeCard(movieId)\r\n        } else {\r\n            handleAddPlaceSubmit({ country, director, duration, year, description, trailer, thumbnail, movieId, nameRU, nameEN, image })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <MoviesCard nameRU={nameRU} nameEN={nameEN} trailerLink={trailerLink} alt={nameRU} duration={duration}\r\n            image={image} country={country} created_at={created_at} description={description} director={director}\r\n            updated_at={updated_at} year={year} movieId={movieId} trailer={trailer} thumbnail={thumbnail} >\r\n            <button className={classNameRadio} onClick={addOrRemoveMovies}></button>\r\n        </MoviesCard>\r\n    )\r\n}\r\n\r\nexport default AllMoviesCard;\r\n\r\n","export default __webpack_public_path__ + \"static/media/loupe.15e54325.svg\";","import React from 'react';\r\nimport Header from '../Header/Header'\r\nimport Footer from '../Footer/Footer'\r\nimport Preloader from '../Preloader/Preloader'\r\nimport AllMoviesCard from '../AllMoviesCard/AllMoviesCard';\r\nimport imgInp from '../../images/loupe.svg';\r\n\r\n\r\nfunction Movies({ moviesInfo, handleAddPlaceSubmit, visibleData,\r\n    setVisibleData, search, setSearch, text, textValid, removeCard, savedMovies, preload, onButton, setOnButton, setTextState, textState, setPreload }) {\r\n    const [index, setIndex] = React.useState(0);\r\n    const arr = moviesInfo.slice(0, 16 + index)\r\n\r\n    const filtredMovise = moviesInfo.filter((movie) => movie.nameRU.toLowerCase().includes(search.toLowerCase()));\r\n    const shortFilmsArray = [...moviesInfo.filter(el => el.duration <= 40)];\r\n    const shortFilmsArrayAndSearch = shortFilmsArray.filter((movie) => movie.nameRU.toLowerCase().includes(search.toLowerCase()));\r\n\r\n    // const arrLength = filtredMovise.length > 16\r\n    //     && shortFilmsArray.length !== visibleData.length\r\n    //     && shortFilmsArrayAndSearch.length !== visibleData.length\r\n    //     && visibleData.length !== moviesInfo.length;\r\n\r\n    // const classNameButton = `${arrLength ? \"even__button\" : \"even__button_hidden\"}`\r\n\r\n    // Открыть ещё 4 карточки\r\n    const handlerAddMovies = () => {\r\n        setIndex(index + 4)\r\n        setVisibleData(arr);\r\n    }\r\n\r\n    // Радиокнопка Короткометражки\r\n    const shortFilms = () => {\r\n        setPreload(true);\r\n        if (!onButton) {\r\n            if (shortFilmsArray.length > 0 && visibleData.length > 0) {\r\n                setVisibleData(shortFilmsArray);\r\n                setPreload(false)\r\n            }\r\n            if (search.length !== 0) {\r\n                setVisibleData(shortFilmsArrayAndSearch)\r\n            }\r\n        } else {\r\n            setVisibleData(filtredMovise.slice(0, 16 + index))\r\n            setPreload(false)\r\n        }\r\n    }\r\n\r\n    const handlerChange = (e) => {\r\n        setTextState(e.target.value)\r\n        setSearch(e.target.value)\r\n        text.onChange(e)\r\n    }\r\n\r\n    // Функция поиска фильмов\r\n    const handlerSearchClick = (e) => {\r\n        e.preventDefault();\r\n        setPreload(true); // Показываю прелоадер\r\n        if (onButton) {\r\n            if (search.length !== 0) {\r\n                setVisibleData(shortFilmsArrayAndSearch)\r\n                setPreload(false); // Скрываю\r\n            } else {\r\n                setVisibleData(shortFilmsArray)\r\n                setPreload(false); // Скрываю\r\n            }\r\n        }\r\n        if (!onButton) {\r\n            if (search.length !== 0) {\r\n                setVisibleData(filtredMovise)\r\n                setPreload(false); // Скрываю\r\n            } else {\r\n                setVisibleData(arr);\r\n                setPreload(false); // Скрываю\r\n            }\r\n        }\r\n    }\r\n\r\n    const render = visibleData.length !== 0\r\n        ? visibleData.map(({ country, created_at, description, director, duration, image, nameEN, nameRU, trailerLink, updated_at, year, id }) =>\r\n            <AllMoviesCard key={id} nameRU={nameRU} nameEN={nameEN} trailerLink={trailerLink} alt={nameRU} duration={duration}\r\n                image={`https://api.nomoreparties.co${image.url}`} country={country} created_at={created_at} description={description} director={director}\r\n                updated_at={updated_at} year={year} handleAddPlaceSubmit={handleAddPlaceSubmit}\r\n                movieId={id} trailer={trailerLink} thumbnail={trailerLink} removeCard={removeCard} savedMovies={savedMovies} />)\r\n        : <h2 className={shortFilmsArray.length === 0 ? \"movies-card__title\" : \"movies-card__title_active\"}>Ничего не найдено</h2>;\r\n\r\n    return (\r\n        <main className=\"movies\">\r\n            <Header />\r\n            <form className=\"search\" onSubmit={(e) => {\r\n                handlerSearchClick(e)\r\n            }} noValidate>\r\n                <div className=\"search__block\">\r\n                    <input onChange={handlerChange} onBlur={e => text.onBlur(e)}\r\n                        value={textState} type=\"text\"\r\n                        className={textValid\r\n                            ? 'search__input_red'\r\n                            : 'search__input'} placeholder=\"Фильм\"></input>\r\n                    {textValid && <span className=\"search__input_span\">\r\n                        Нужно ввести ключевое слово\r\n                    </span>}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={'search__block_button'}>\r\n                        <img src={imgInp} alt=\"search\" />\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <div className=\"filter-checkbox\">\r\n                <button\r\n                    className={onButton ? \"filter-checkbox__button_on\" : \"filter-checkbox__button_of\"}\r\n                    onClick={() => {\r\n                        setOnButton(!onButton);\r\n                        shortFilms();\r\n                    }}>\r\n                </button>\r\n                <p className=\"search__slider_text\">Короткометражки</p>\r\n            </div>\r\n            <div className=\"movies-card\">\r\n                {preload && <Preloader />}\r\n                {render}\r\n            </div>\r\n            <div className=\"even\">\r\n                <button onClick={handlerAddMovies} className=\"even__button\">Ещё</button>\r\n            </div>\r\n            <Footer />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Movies;","export default __webpack_public_path__ + \"static/media/removeCardIcon.5856f144.svg\";","import React from 'react';\r\nimport MoviesCard from '../MoviesCard/MoviesCard';\r\nimport removeCardIcon from '../../images/removeCardIcon.svg'\r\n\r\nconst MyMoviesCard = ({description, director, duration, image, movieId, owner, thumbnail, trailerLink, year, _id, removeCard }) => {\r\n    const handleDeleteMovie = () => removeCard(movieId)\r\n    return (\r\n        <MoviesCard\r\n        _id={_id} nameRU={description} director={director} duration={duration} image={image} movieId={movieId} owner={owner}\r\n        thumbnail={thumbnail} trailerLink={trailerLink} year={year} >\r\n            <button className=\"movie-card__elem_img-remove\" type=\"button\" onClick={handleDeleteMovie}><img src={removeCardIcon} alt=\"remove\"></img></button>\r\n        </MoviesCard>\r\n    )\r\n}\r\n\r\nexport default MyMoviesCard;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport MyMoviesCard from '../MyMoviesCard/MyMoviesCard';\r\nimport imgInp from '../../images/loupe.svg';\r\n\r\n\r\nconst SavedMovies = ({ setSearch, removeCard, text, textValid, savedMovies, search, setVisibleSaveData, visibleSaveData, preload, setPreload }) => {\r\n    const [onButton, setOnButton] = React.useState(false);\r\n    const [index, setIndex] = React.useState(0);\r\n    const arr = savedMovies.slice(0, 16 + index);\r\n\r\n    const filtredMovise = savedMovies.filter((movie) => movie.description.toLowerCase().includes(search.toLowerCase()));\r\n    const shortFilmsArray = [...savedMovies.filter(el => el.duration <= 40)];\r\n    const shortFilmsArrayAndSearch = shortFilmsArray.filter((movie) => movie.description.toLowerCase().includes(search.toLowerCase()));\r\n\r\n    const arrLength = filtredMovise.length > 16\r\n        && shortFilmsArray.length !== visibleSaveData.length\r\n        && shortFilmsArrayAndSearch.length !== visibleSaveData.length\r\n        && visibleSaveData.length !== savedMovies.length;\r\n\r\n    const classNameButton = `${arrLength && visibleSaveData.length !== 0 ? \"even__button\" : \"even__button_hidden\"}`\r\n\r\n    // Открыть ещё 4 карточки\r\n    const handlerAddMovies = () => {\r\n        setIndex(index + 4)\r\n        setVisibleSaveData(arr);\r\n    }\r\n\r\n        // Радиокнопка Короткометражки\r\n        const shortFilms = () => {\r\n            setPreload(true);\r\n            if (!onButton) {\r\n                if (shortFilmsArray.length > 0 && visibleSaveData.length > 0) {\r\n                    setVisibleSaveData(shortFilmsArray);\r\n                    setPreload(false)\r\n                }\r\n                if (search.length !== 0) {\r\n                    setVisibleSaveData(shortFilmsArrayAndSearch)\r\n                }\r\n            } else {\r\n                setVisibleSaveData(filtredMovise.slice(0, 16 + index))\r\n                setPreload(false)\r\n            }\r\n        }\r\n\r\n    const handlerChange = (e) => {\r\n        setSearch(e.target.value)\r\n        text.onChange(e)\r\n    }\r\n\r\n        // Функция поиска фильмов\r\n        const handlerSearchClick = (e) => {\r\n            e.preventDefault();\r\n            setPreload(true); // Показываю прелоадер\r\n            if (onButton) {\r\n                if (search.length !== 0) {\r\n                    setVisibleSaveData(shortFilmsArrayAndSearch)\r\n                    setPreload(false); // Скрываю\r\n                } else {\r\n                    setVisibleSaveData(shortFilmsArray)\r\n                    setPreload(false); // Скрываю\r\n                }\r\n            }\r\n            if (!onButton) {\r\n                if (search.length !== 0) {\r\n                    setVisibleSaveData(filtredMovise)\r\n                    setPreload(false); // Скрываю\r\n                } else {\r\n                    setVisibleSaveData(arr);\r\n                    setPreload(false); // Скрываю\r\n                }\r\n            }\r\n        }\r\n\r\n    const tests = (shortFilmsArray.length === 0 || filtredMovise.length === 0 || shortFilmsArrayAndSearch.length === 0) && visibleSaveData.length === 0 && savedMovies.length !== 0\r\n\r\n    const render = visibleSaveData.length !== 0\r\n        ? visibleSaveData.map(({ description, director, duration, image, movieId, owner, thumbnail, trailer, year, _id }) =>\r\n            <MyMoviesCard removeCard={removeCard} key={_id}\r\n                _id={_id} description={description} director={director} duration={duration} image={image} movieId={movieId} owner={owner}\r\n                thumbnail={thumbnail} trailerLink={trailer} year={year} />)\r\n        : <h2 className={tests ? \"movies-card__title_active\" : \"movies-card__title\"}>Ничего не найдено</h2>;\r\n\r\n    return (\r\n        <main className=\"movies\">\r\n            <Header />\r\n            <form className=\"search\" onSubmit={handlerSearchClick} noValidate>\r\n                <div className=\"search__block\">\r\n                    <input onChange={handlerChange} onBlur={e => text.onBlur(e)}\r\n                        value={text.value} type=\"text\"\r\n                        className={textValid\r\n                            ? 'search__input_red'\r\n                            : 'search__input'} placeholder=\"Фильм\" required></input>\r\n                    {textValid && <span className=\"search__input_span\">\r\n                        Нужно ввести ключевое слово\r\n                    </span>}\r\n                    <button type=\"submit\"\r\n                        className={'search__block_button'}>\r\n                        <img src={imgInp} alt=\"search\" />\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <div className=\"filter-checkbox\">\r\n                <button className={`filter-checkbox__button_of ${onButton\r\n                    ? \"filter-checkbox__button_on\"\r\n                    : \"filter-checkbox__button_of\"}`} onClick={() => {\r\n                        shortFilms()\r\n                        setOnButton(!onButton)\r\n                    }}>\r\n                </button>\r\n                <p className=\"search__slider_text\">Короткометражки</p>\r\n            </div>\r\n            <div className=\"movies-card\">\r\n                {preload && <Preloader />}\r\n                {render}\r\n            </div>\r\n            <div className=\"even\">\r\n                <button\r\n                    onClick={handlerAddMovies}\r\n                    className={classNameButton}>Ещё</button>\r\n            </div>\r\n            <Footer />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default SavedMovies;","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n","import React from 'react'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Header from '../Header/Header';\r\nimport UseInput from '../UseInput/UseInput';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nconst Profile = ({ onSignOut, handleUpdateUser, confirm, confirmError, setConfirm, setConfirmError }) => {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n\r\n    const nameValidation = UseInput('', { isEmpty: true, minLengthError: 2, maxLengthError: 30 });\r\n    const emailValidation = UseInput('', { isEmpty: true, minLengthError: 3, isEmail: true });\r\n    const nameConfigValid = ((nameValidation.isDirty && nameValidation.isEmpty) || (nameValidation.isDirty && nameValidation.minLengthError) || (nameValidation.isDirty && nameValidation.maxLengthError));\r\n    const emailConfigValid = ((emailValidation.isDirty && emailValidation.isEmpty) || (emailValidation.isDirty && emailValidation.minLengthError) || (emailValidation.isDirty && emailValidation.emailError));\r\n\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setEmail(currentUser.email);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        if (email !== currentUser.email) {\r\n            handleUpdateUser({\r\n                name: nameValidation.value,\r\n                email: emailValidation.value,\r\n            });\r\n        } else {\r\n            setConfirm(false);\r\n            setConfirmError(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Route>\r\n            <div className=\"profile\">\r\n                <Header />\r\n                <div className=\"profile__title\">{`Привет ${currentUser.name}`}</div>\r\n                <form className=\"profile__form\" action=\"#\" onSubmit={handleSubmit} noValidate>\r\n\r\n                    <div className='profile__form_unit'>\r\n                        <input onChange={e => {\r\n                            setName(e.target.value)\r\n                            nameValidation.onChange(e)\r\n                        }} onBlur={e => nameValidation.onBlur(e)}\r\n                            value={name} type=\"text\"\r\n                            className={nameConfigValid\r\n                                ? \"profile__form_input-red\" : \"profile__form_input\"}\r\n                            required>\r\n                        </input>\r\n                        <label className='profile__form_label'>\r\n                            {currentUser.name}\r\n                        </label>\r\n                    </div>\r\n                    {nameConfigValid && <span className=\"form__input_span\">\r\n                        Введите имя от 2 до 30 символов\r\n                    </span>}\r\n                    <div className='profile__form_unit-last'>\r\n                        <input onChange={e => {\r\n                            setEmail(e.target.value)\r\n                            emailValidation.onChange(e)\r\n                        }} onBlur={e => emailValidation.onBlur(e)}\r\n                            value={email} type=\"email\"\r\n                            className={emailConfigValid\r\n                                ? \"profile__form_input-red\" : \"profile__form_input\"} required>\r\n\r\n                        </input>\r\n                        <label className='profile__form_label'>\r\n                            {currentUser.email}\r\n                        </label>\r\n                    </div>\r\n                    {emailConfigValid && <span className=\"form__input_span\">\r\n                        Введите email адрес.\r\n                    </span>}\r\n                    <div className=\"profile__form_button-block\">\r\n                        {<span className={`${confirm ? \"profile__form-confirm_active\" : \"profile__form-confirm\"}`}>Профиль успешно изменён.</span>}\r\n                        {<span className={`${confirmError ? \"profile__form-confirm_error\" : \"profile__form-confirm\"}`}>При обновлении профиля произошла ошибка.</span>}\r\n                        <button className={(nameConfigValid || emailConfigValid) ? \"profile__form_button-disabled\" : \"profile__form_button\"}\r\n                            disabled={!emailValidation.inputValid || !nameValidation.inputValid}\r\n                        >Редактировать</button>\r\n                    </div>\r\n\r\n\r\n                    <Link to=\"/\" className=\"profile__exit\" onClick={onSignOut}>Выйти из аккаунта</Link>\r\n                </form>\r\n\r\n            </div>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { Route } from 'react-router-dom';\r\nimport ErrorHandler from '../componenst/ErrorHandler/ErrorHandler';\r\n\r\n\r\nexport const BASE_URL = 'http://localhost:3001/api';\r\n// https://myfilms.nomoredomains.rocks/api\r\n// http://localhost:3001/api\r\n\r\nconst handleResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const register = (name, email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n    })\r\n        .then(handleResponse)\r\n          .then((res) => {\r\n            return res;\r\n          })\r\n        .catch((err) => {\r\n            <Route path=\"/error\">\r\n              <ErrorHandler err={err} />\r\n            </Route>\r\n        });\r\n};\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then(handleResponse)\r\n        .then((data) => {\r\n            if (data) {\r\n                localStorage.setItem('jwt', data.jwt);\r\n                return data;\r\n            } else {\r\n                return;\r\n            }\r\n        })\r\n};\r\n\r\nexport const getContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n    })\r\n        .then(handleResponse)\r\n        .then(data => data)\r\n}","// 2 запросы к сервису beatfilm-movies\r\n\r\nclass Api {\r\n    constructor({ url, headers }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n    }\r\n\r\n    getInitialMovies(token) {\r\n        return fetch(`${this.url}/beatfilm-movies`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // \"Authorization\": `Bearer ${token}`\r\n            },\r\n        })\r\n            .then(this._handleResponse)\r\n    }\r\n\r\n    _handleResponse = (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        // если ошибка, отклоняем промис\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    url: 'https://api.nomoreparties.co',\r\n})\r\n\r\nexport default api;","// 1 описание запросов к нашему Api\r\n\r\nclass MainApi {\r\n    constructor({ url, headers }) {\r\n        this.url = url;\r\n        this.headers = headers;\r\n    }\r\n\r\n    //получаю данные профиля с сервера\r\n    getUserInfo(token) {\r\n        return fetch(`${this.url}/users/me`, {\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(this._handleResponse)\r\n    }\r\n\r\n    // Изменение данных профиля\r\n    setUserInfo({ email, name }, token) {\r\n        return fetch(`${this.url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                name,\r\n            })\r\n        })\r\n            .then(this._handleResponse)\r\n    }\r\n\r\n    //добавление фильма в избранное\r\n    addMovie(data, token) {\r\n        return fetch(`${this.url}/movies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(this._handleResponse)\r\n    }\r\n\r\n    // Удаление фильма из избранного\r\n    deleteMovies(movieId, token) {\r\n        return fetch(`${this.url}/movies/${movieId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then(this._handleResponse)\r\n    }\r\n\r\n    // Получаю данные карточек со своего бэкенда\r\n    getSavedMovies(token) {\r\n        return fetch(`${this.url}/movies`, {\r\n            method: 'GET',\r\n            headers: {\r\n                authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify()\r\n        })\r\n            .then(this._handleResponse)\r\n    }\r\n\r\n    _handleResponse = (res) => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        // если ошибка, отклоняем промис\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n}\r\n\r\nconst mainApi = new MainApi({\r\n    url: 'http://localhost:3001/api',\r\n    // https://myfilms.nomoredomains.rocks/api\r\n    // http://localhost:3001/api\r\n})\r\n\r\nexport default mainApi;","import React from 'react';\r\nimport { Route, Switch, useHistory, Redirect } from 'react-router-dom';\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport ProtectedRouteAuth from '../ProtectedRouteAuth.js/ProtectedRouteAuth';\r\nimport Main from '../Main/Main';\r\nimport ErrorHandler from '../ErrorHandler/ErrorHandler';\r\nimport Register from '../Register/Register';\r\nimport Login from '../Login/Login';\r\nimport Movies from '../Movies/Movies';\r\nimport SavedMovies from '../SavedMovies/SavedMovies';\r\nimport Profile from '../Profile/Profile';\r\nimport * as Auth from '../../utils/Auth';\r\nimport api from '../../utils/MoviesApi';\r\nimport mainApi from '../../utils/MainApi';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\nimport UseInput from '../UseInput/UseInput';\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [moviesInfo, setMoviesInfo] = React.useState([]);\r\n  const [visibleData, setVisibleData] = React.useState([]);\r\n  const [visibleSaveData, setVisibleSaveData] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [savedMovies, setSavedMovies] = React.useState([])\r\n  const [currentUser, setCurrentUser] = React.useState({ name: '', email: '', password: '' });\r\n  const [userData, setUserData] = React.useState({});\r\n  const [confirm, setConfirm] = React.useState(false);\r\n  const [confirmError, setConfirmError] = React.useState(false);\r\n  const [preload, setPreload] = React.useState(false);\r\n  const [onButton, setOnButton] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  const location = history.location.pathname;\r\n\r\n  //Валидация форм поиска по фильмам\r\n  const text = UseInput('', { isEmpty: true, maxLengthError: 30 });\r\n  const textValid = ((text.isDirty && text.isEmpty) || (text.isDirty && text.minLengthError) || (text.isDirty && text.maxLengthError));\r\n\r\n  const [textState, setTextState] = React.useState('');\r\n\r\n\r\n  //Валидация форм поиска по сохранённым фильмам\r\n  const textSave = UseInput('', { isEmpty: true, maxLengthError: 30 });\r\n  const textSaveValid = ((text.isDirty && text.isEmpty) || (text.isDirty && text.minLengthError) || (text.isDirty && text.maxLengthError));\r\n\r\n  //Рендер данных на стр.\r\n  React.useEffect(() => {\r\n    if (loggedIn) {\r\n      const token = localStorage.getItem('jwt');\r\n      if (token) {\r\n        // setPreload(true); // Показываю прелоадер\r\n        Promise.all([mainApi.getUserInfo(token),\r\n        api.getInitialMovies(token),\r\n        ])\r\n          .then(([data, moviesInfo]) => {\r\n            setCurrentUser(data[0]);\r\n            setMoviesInfo(moviesInfo); // Рендер фильмов\r\n            // if (moviesInfo.length > 0) {\r\n            //   setPreload(false); // Скрываю прелоадер\r\n            // }\r\n          })\r\n          .catch((err) => {\r\n            console.error(err)\r\n          })\r\n      }\r\n    }\r\n  }, [loggedIn])\r\n\r\n  // //Сохранение состояния поиска (результат поиска фильмов)\r\n  React.useEffect(() => {\r\n    // setPreload(true);\r\n    setVisibleData(JSON.parse(localStorage.getItem('visibleData')));\r\n    // setPreload(false);\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('visibleData', JSON.stringify(visibleData));\r\n  }, [visibleData]);\r\n\r\n  // Сохранение состояния строки поиска фильмов\r\n  React.useEffect(() => {\r\n    setTextState(JSON.parse(localStorage.getItem('textState')));\r\n  }, [])\r\n  React.useEffect(() => {\r\n    localStorage.setItem('textState', JSON.stringify(textState));\r\n  }, [textState])\r\n\r\n  // Отвечает за то, чтоб у каждого пользователя были свои сохранённые фильмы\r\n  function filterSaveMovies(movies) {\r\n    const myId = currentUser._id;\r\n    const myMovies = movies.filter((movie) => {\r\n      const { owner = '' } = movie;\r\n      return myId === owner;\r\n    });\r\n    return myMovies;\r\n  }\r\n\r\n  // Рендер сохранённых карточек\r\n  React.useEffect(() => {\r\n    const token = localStorage.getItem('jwt');\r\n    if (currentUser) {\r\n      // setPreload(true);\r\n      Promise.resolve(mainApi.getSavedMovies(token))\r\n        .then((savedMovies) => {\r\n          setSavedMovies(filterSaveMovies(savedMovies));  \r\n          // if (savedMovies.length > 0) {\r\n          //   setPreload(false);\r\n          // } \r\n        })\r\n        .catch((err) => {\r\n          console.error(err)\r\n        })\r\n    }\r\n  }, [currentUser])\r\n\r\n  // //Отобразить 16 карточек в сохранённых\r\n  React.useEffect(() => {\r\n    // setPreload(true);\r\n    const arr = savedMovies.slice(0, 16)\r\n    setVisibleSaveData(arr);\r\n    // setPreload(false);\r\n\r\n  }, [savedMovies])\r\n\r\n  // //Добавление карточки App.js\r\n  const handleAddPlaceSubmit = async (movieToSave) => {\r\n    movieToSave = {\r\n      country: movieToSave.country || \"\",\r\n      director: movieToSave.director || \"\",\r\n      duration: movieToSave.duration || 0,\r\n      year: movieToSave.year || \"\",\r\n      description: movieToSave.description || \"\",\r\n      image: movieToSave.image,\r\n      trailer: movieToSave.trailer || \"https://youtube.ru\",\r\n      thumbnail: movieToSave.thumbnail || \"https://youtube.ru\",\r\n      movieId: movieToSave.movieId,\r\n      nameRU: movieToSave.nameRU || \"\",\r\n      nameEN: movieToSave.nameEN || \"\",\r\n    };\r\n    const token = localStorage.getItem('jwt');\r\n    mainApi.addMovie(movieToSave, token)\r\n      .then((newCard) => {\r\n        setSavedMovies([newCard, ...savedMovies]);\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  //Удаление карточки\r\n  const removeCard = (_id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    mainApi.deleteMovies(_id, token)\r\n      .then(() => {\r\n        setSavedMovies([...savedMovies.filter(el => el.movieId !== _id)]);\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  //Чекбокс короткометражки\r\n  React.useEffect(() => {\r\n    setOnButton(JSON.parse(localStorage.getItem('onButton')));\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('onButton', JSON.stringify(onButton));\r\n  }, [onButton]);\r\n\r\n\r\n  //Получение данных пользователя\r\n  const auth = async (jwt) => {\r\n    return Auth.getContent(jwt)\r\n      .then((res) => {\r\n        let resEmail = res.map(i => i.email);\r\n        let resName = res.map(i => i.name);\r\n        // Проверка токена, если токен ваидный записываем данные в state, иначе удаляем токен из localStorage; \r\n        if (res) {\r\n          setLoggedIn(true);\r\n          setUserData({\r\n            email: resEmail.join(''),\r\n            name: resName.join('')\r\n          });\r\n          // history.push(location)\r\n        }\r\n      })\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      auth(jwt);\r\n      history.push(location);\r\n    }\r\n  }, [history, location, loggedIn]);\r\n\r\n\r\n  //Функция регистрации\r\n  const onRegister = ({ name, email, password }) => {\r\n    return Auth.register(name, email, password)\r\n      .then((res) => {\r\n        if (!res || res.statusCode === 400) throw new Error('Что-то пошло не так')\r\n        return res;\r\n      })\r\n      .then(() => onLogin({ email, password }))\r\n  };\r\n\r\n  //Функция авторизации\r\n  const onLogin = ({ email, password }) => {\r\n    return Auth.login(email, password).then((res) => {\r\n      if (!res.token) throw new Error('Неправильные имя пользователя или пароль');\r\n      else {\r\n        localStorage.setItem('jwt', res.token);\r\n        setLoggedIn(true);\r\n        history.push('/movies')\r\n      }\r\n    })\r\n  };\r\n\r\n  // Выйти из акаунта\r\n  const onSignOut = () => {\r\n    // удаляем токен\r\n    localStorage.removeItem('jwt');\r\n    setLoggedIn(false);\r\n    // обновляю стостояние показанных фильмов\r\n    setVisibleData(localStorage.removeItem('visibleData'));\r\n    // обновляю состояние радмокнипки\r\n    setOnButton(false);\r\n    // очистка строки поиска\r\n    setTextState('')\r\n    // обновляю стостояние показанных фильмов\r\n    const arr = moviesInfo.slice(0, 16)\r\n    setVisibleData(arr);\r\n    // Скидываю сообщение об ошибке/удаче смены пользователя\r\n    setConfirm(false);\r\n    setConfirmError(false);\r\n    history.push('/');\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n  }, [userData])\r\n\r\n  //Редактирование данных пользователя\r\n  const handleUpdateUser = ({ email, name }) => {\r\n    const token = localStorage.getItem('jwt');\r\n    // if (email === currentUser.email) throw new Error('Такой email уже существует')\r\n    mainApi.setUserInfo({ name, email }, token)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        setConfirm(true);\r\n        setConfirmError(false);\r\n      })\r\n      .catch((err) => {\r\n        setConfirm(false);\r\n        setConfirmError(true);\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"App\">\r\n        <div className=\"page\">\r\n          <Switch>\r\n            <Route exact loggedIn={loggedIn} path=\"/\">\r\n              <Main loggedIn={loggedIn} />\r\n            </Route>\r\n\r\n            <ProtectedRoute exact loggedIn={loggedIn} path=\"/movies\"\r\n              moviesInfo={moviesInfo} onButton={onButton} setOnButton={setOnButton}\r\n              handleAddPlaceSubmit={handleAddPlaceSubmit}\r\n              setTextState={setTextState} textState={textState}\r\n              visibleData={visibleData} setVisibleData={setVisibleData}\r\n              search={search} setSearch={setSearch} preload={preload}\r\n              text={text} textValid={textValid} removeCard={removeCard} savedMovies={savedMovies} setPreload={setPreload}\r\n              component={Movies} />\r\n\r\n            <ProtectedRoute exact loggedIn={loggedIn} path=\"/saved-movies\"\r\n              setSearch={setSearch} removeCard={removeCard}\r\n              text={textSave} textValid={textSaveValid} savedMovies={savedMovies} setSavedMovies={setSavedMovies}\r\n              visibleSaveData={visibleSaveData} setVisibleSaveData={setVisibleSaveData}\r\n              search={search} moviesInfo={moviesInfo} preload={preload} setPreload={setPreload}\r\n              component={SavedMovies} />\r\n\r\n            <ProtectedRoute exact loggedIn={loggedIn} path=\"/profile\"\r\n              handleUpdateUser={handleUpdateUser}\r\n              onSignOut={onSignOut} setConfirm={setConfirm} setConfirmError={setConfirmError}\r\n              userData={userData} confirm={confirm} confirmError={confirmError}\r\n              component={Profile} />\r\n\r\n            <ProtectedRouteAuth exact loggedIn={loggedIn} path=\"/signup\"\r\n              component={Register} onRegister={onRegister} />\r\n\r\n            <ProtectedRouteAuth exact loggedIn={loggedIn} path=\"/signin\"\r\n              component={Login} onLogin={onLogin} />\r\n\r\n            <Route path='*'>\r\n              <ErrorHandler location={location} />\r\n            </Route>\r\n\r\n            <Route>\r\n              {loggedIn ? <Redirect to=\"/movies\" /> : <Redirect to=\"/\" />}\r\n            </Route>\r\n\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './componenst/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}