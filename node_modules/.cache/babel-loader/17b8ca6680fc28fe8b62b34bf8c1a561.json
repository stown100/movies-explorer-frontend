{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\n\nconst UseValidation = (value, validations) => {\n  _s();\n\n  const [isEmpty, setEmpty] = React.useState(true);\n  const [minLengthError, setMinLengthError] = React.useState(false);\n  const [maxLengthError, setMaxLengthError] = React.useState(false);\n  const [emailError, setEmailError] = React.useState(false);\n  const [inputValid, setInputValid] = React.useState(false);\n  React.useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'minLengthError':\n          value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false);\n          break;\n\n        case 'isEmpty':\n          value ? setEmpty(false) : setEmpty(true);\n          break;\n\n        case 'maxLengthError':\n          value.length > validations[validation] ? setMaxLengthError(true) : setMaxLengthError(false);\n          break;\n\n        case 'isEmail':\n          const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\].,;:\\s@\\\\\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\\\\\"]{2,})$/i;\n          re.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [value]); //Валидация кнопки\n\n  React.useEffect(() => {\n    if (isEmpty || maxLengthError || minLengthError || emailError) {\n      setInputValid(false);\n    } else {\n      setInputValid(true);\n    }\n  }, [isEmpty, maxLengthError, minLengthError, emailError]);\n  return {\n    isEmpty,\n    minLengthError,\n    maxLengthError,\n    emailError,\n    inputValid\n  };\n};\n\n_s(UseValidation, \"DuMjMInD+uvaGkq1cc3BJ7A9IiI=\");\n\n_c = UseValidation;\nexport default UseValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseValidation\");","map":{"version":3,"sources":["C:/Users/СерхиоРобертоКарлос/Yandex-praktikum/Diplom/movies-explorer-frontend/src/componenst/UseValidation/UseValidation.js"],"names":["React","UseValidation","value","validations","isEmpty","setEmpty","useState","minLengthError","setMinLengthError","maxLengthError","setMaxLengthError","emailError","setEmailError","inputValid","setInputValid","useEffect","validation","length","re","test","String","toLowerCase"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBL,KAAK,CAACM,QAAN,CAAe,IAAf,CAA5B;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,KAAK,CAACM,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCV,KAAK,CAACM,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACM,QAAN,CAAe,KAAf,CAApC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8Bd,KAAK,CAACM,QAAN,CAAe,KAAf,CAApC;AAEAN,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClB,SAAK,MAAMC,UAAX,IAAyBb,WAAzB,EAAsC;AAClC,cAAQa,UAAR;AACI,aAAK,gBAAL;AACId,UAAAA,KAAK,CAACe,MAAN,GAAed,WAAW,CAACa,UAAD,CAA1B,GAAyCR,iBAAiB,CAAC,IAAD,CAA1D,GAAmEA,iBAAiB,CAAC,KAAD,CAApF;AACA;;AACJ,aAAK,SAAL;AACIN,UAAAA,KAAK,GAAGG,QAAQ,CAAC,KAAD,CAAX,GAAqBA,QAAQ,CAAC,IAAD,CAAlC;AACA;;AACJ,aAAK,gBAAL;AACIH,UAAAA,KAAK,CAACe,MAAN,GAAed,WAAW,CAACa,UAAD,CAA1B,GAAyCN,iBAAiB,CAAC,IAAD,CAA1D,GAAmEA,iBAAiB,CAAC,KAAD,CAApF;AACA;;AACJ,aAAK,SAAL;AACI,gBAAMQ,EAAE,GAAG,wHAAX;AACAA,UAAAA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAAClB,KAAD,CAAN,CAAcmB,WAAd,EAAR,IAAuCT,aAAa,CAAC,KAAD,CAApD,GAA8DA,aAAa,CAAC,IAAD,CAA3E;AACA;;AACJ;AACI;AAfR;AAiBH;AACJ,GApBD,EAoBG,CAACV,KAAD,CApBH,EAP0C,CA6B1C;;AACAF,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClB,QAAIX,OAAO,IAAIK,cAAX,IAA6BF,cAA7B,IAA+CI,UAAnD,EAA+D;AAC3DG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAND,EAMG,CAACV,OAAD,EAAUK,cAAV,EAA0BF,cAA1B,EAA0CI,UAA1C,CANH;AAQA,SAAO;AACHP,IAAAA,OADG;AAEHG,IAAAA,cAFG;AAGHE,IAAAA,cAHG;AAIHE,IAAAA,UAJG;AAKHE,IAAAA;AALG,GAAP;AAOH,CA7CD;;GAAMZ,a;;KAAAA,a;AA+CN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst UseValidation = (value, validations) => {\r\n    const [isEmpty, setEmpty] = React.useState(true);\r\n    const [minLengthError, setMinLengthError] = React.useState(false);\r\n    const [maxLengthError, setMaxLengthError] = React.useState(false);\r\n    const [emailError, setEmailError] = React.useState(false);\r\n    const [inputValid, setInputValid] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLengthError':\r\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\r\n                    break;\r\n                case 'isEmpty':\r\n                    value ? setEmpty(false) : setEmpty(true)\r\n                    break;\r\n                case 'maxLengthError':\r\n                    value.length > validations[validation] ? setMaxLengthError(true) : setMaxLengthError(false)\r\n                    break;\r\n                case 'isEmail':\r\n                    const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\].,;:\\s@\\\\\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\\\\\"]{2,})$/i;\r\n                    re.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    //Валидация кнопки\r\n    React.useEffect(() => {\r\n        if (isEmpty || maxLengthError || minLengthError || emailError) {\r\n            setInputValid(false);\r\n        } else {\r\n            setInputValid(true);\r\n        }\r\n    }, [isEmpty, maxLengthError, minLengthError, emailError])\r\n\r\n    return {\r\n        isEmpty,\r\n        minLengthError,\r\n        maxLengthError,\r\n        emailError,\r\n        inputValid,\r\n    }\r\n}\r\n\r\nexport default UseValidation;"]},"metadata":{},"sourceType":"module"}