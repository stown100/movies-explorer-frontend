{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u0440\\u0445\\u0438\\u043E\\u0420\\u043E\\u0431\\u0435\\u0440\\u0442\\u043E\\u041A\\u0430\\u0440\\u043B\\u043E\\u0441\\\\Yandex-praktikum\\\\Diplom\\\\movies-explorer-frontend\\\\src\\\\componenst\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UseInput from \"../UseInput/UseInput\";\nimport Form from \"../From/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  _s();\n\n  let {\n    onRegister\n  } = _ref;\n  const name = UseInput('', {\n    isEmpty: true,\n    minLengthError: 2,\n    maxLengthError: 30\n  });\n  const email = UseInput('', {\n    isEmpty: true,\n    minLengthError: 3,\n    isEmail: true\n  });\n  const password = UseInput('', {\n    isEmpty: true,\n    minLengthError: 2,\n    maxLengthError: 30\n  });\n  const history = useHistory();\n\n  const handleSubmit = async e => {\n    // e.preventDefault();\n    // onRegister({ name, email, password })\n    //     .then(() => history.push('/signin'))\n    //     .catch(() => history.push('/error'))\n    e.preventDefault();\n    history.push('/signin');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    title: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    text: \"\\u0412\\u044B \\u0443\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B?\",\n    link: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n    to: \"signin\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"form__text-input\",\n      children: \"\\u0418\\u043C\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => name.onChange(e),\n      onBlur: e => name.onBlur(e),\n      value: name.value,\n      type: \"text\",\n      className: name.isDirty && name.isEmpty || name.isDirty && name.minLengthError || name.isDirty && name.maxLengthError ? \"form__input_red\" : \"form__input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), (name.isDirty && name.isEmpty || name.isDirty && name.minLengthError || name.isDirty && name.maxLengthError) && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form__input_span\",\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043E\\u0442 2 \\u0434\\u043E 30 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 132\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"form__text-input\",\n      children: \"E-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => email.onChange(e),\n      onBlur: e => email.onBlur(e),\n      value: email.value,\n      type: \"email\",\n      className: email.isDirty && email.isEmpty || email.isDirty && email.minLengthError || email.isDirty && email.emailError ? \"form__input_red\" : \"form__input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), (email.isDirty && email.isEmpty || email.isDirty && email.minLengthError || email.isDirty && email.emailError) && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form__input_span\",\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email, \\u0434\\u043B\\u0438\\u043D\\u043E\\u0439 \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 3 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 134\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"form__text-input\",\n      children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => password.onChange(e),\n      onBlur: e => password.onBlur(e),\n      value: password.value,\n      type: \"password\",\n      className: password.isDirty && password.isEmpty || password.isDirty && password.minLengthError || password.isDirty && password.maxLengthError ? \"form__input_red\" : \"form__input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), (password.isDirty && password.isEmpty || password.isDirty && password.minLengthError || password.isDirty && password.maxLengthError) && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form__input_span\",\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043E\\u0442 2 \\u0434\\u043E 30 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 156\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !email.inputValid || !password.inputValid,\n      type: \"submit\",\n      className: \"form__button\",\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/СерхиоРобертоКарлос/Yandex-praktikum/Diplom/movies-explorer-frontend/src/componenst/Register/Register.js"],"names":["React","useHistory","UseInput","Form","Register","onRegister","name","isEmpty","minLengthError","maxLengthError","email","isEmail","password","history","handleSubmit","e","preventDefault","push","onChange","onBlur","value","isDirty","emailError","inputValid"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UseInput from \"../UseInput/UseInput\";\r\nimport Form from \"../From/Form\";\r\n\r\nconst Register = ({ onRegister }) => {\r\n    const name = UseInput('', { isEmpty: true, minLengthError: 2, maxLengthError: 30 });\r\n    const email = UseInput('', { isEmpty: true, minLengthError: 3, isEmail: true });\r\n    const password = UseInput('', { isEmpty: true, minLengthError: 2, maxLengthError: 30 });\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n        // e.preventDefault();\r\n        // onRegister({ name, email, password })\r\n        //     .then(() => history.push('/signin'))\r\n        //     .catch(() => history.push('/error'))\r\n            e.preventDefault();\r\n            history.push('/signin');\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit} title=\"Добро пожаловать\" text=\"Вы уже зарегистрированны?\" link=\"Войти\" to=\"signin\">\r\n            <p className=\"form__text-input\">Имя</p>\r\n            <input onChange={e => name.onChange(e)} onBlur={e => name.onBlur(e)}\r\n                value={name.value} type=\"text\"\r\n                className={((name.isDirty && name.isEmpty) || (name.isDirty && name.minLengthError) || (name.isDirty && name.maxLengthError))\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required>\r\n            </input>\r\n            {((name.isDirty && name.isEmpty) || (name.isDirty && name.minLengthError) || (name.isDirty && name.maxLengthError)) && <span className=\"form__input_span\">\r\n                Введите имя от 2 до 30 символов\r\n            </span>}\r\n            <p className=\"form__text-input\">E-mail</p>\r\n            <input onChange={e => email.onChange(e)} onBlur={e => email.onBlur(e)}\r\n                value={email.value} type=\"email\"\r\n                className={((email.isDirty && email.isEmpty) || (email.isDirty && email.minLengthError) || (email.isDirty && email.emailError))\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required>\r\n            </input>\r\n            {((email.isDirty && email.isEmpty) || (email.isDirty && email.minLengthError) || (email.isDirty && email.emailError)) && <span className=\"form__input_span\">\r\n                Введите email, длиной не менее 3 символов\r\n            </span>}\r\n\r\n            <p className=\"form__text-input\">Пароль</p>\r\n            <input onChange={e => password.onChange(e)} onBlur={e => password.onBlur(e)}\r\n                value={password.value} type=\"password\"\r\n                className={((password.isDirty && password.isEmpty) || (password.isDirty && password.minLengthError) || (password.isDirty && password.maxLengthError))\r\n                    ? \"form__input_red\"\r\n                    : \"form__input\"} required>\r\n            </input>\r\n            {((password.isDirty && password.isEmpty) || (password.isDirty && password.minLengthError) || (password.isDirty && password.maxLengthError)) && <span className=\"form__input_span\">\r\n                Введите пароль от 2 до 30 символов\r\n            </span>}\r\n            <button disabled={!email.inputValid || !password.inputValid} type=\"submit\" className=\"form__button\">Зарегестрироваться</button>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}