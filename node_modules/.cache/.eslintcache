[{"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\index.js":"1","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\App\\App.js":"3","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Profile\\Profile.js":"4","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Main\\Main.js":"5","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\ErrorHandler\\ErrorHandler.js":"6","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Movies\\Movies.js":"7","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Register\\Register.js":"8","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Login\\Login.js":"9","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\UseInput\\UseInput.js":"10","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.js":"11","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\utils\\MainApi.js":"12","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\utils\\MoviesApi.js":"13","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\utils\\Auth.js":"14","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\SavedMovies\\SavedMovies.js":"15","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\ProtectedRouteAuth.js\\ProtectedRouteAuth.js":"16","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\ProtectedRoute\\ProtectedRoute.js":"17","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Header\\Header.js":"18","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Footer\\Footer.js":"19","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\HeaderMain\\HeaderMain.js":"20","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\HeaderAuthorize\\HeaderAuthorize.js":"21","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\From\\Form.js":"22","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Preloader\\Preloader.js":"23","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\AllMoviesCard\\AllMoviesCard.js":"24","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\UseValidation\\UseValidation.js":"25","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\MyMoviesCard\\MyMoviesCard.js":"26","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Burger\\Burger.js":"27","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\MoviesCard\\MoviesCard.js":"28"},{"size":628,"mtime":1640591722856,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1640591722863,"results":"31","hashOfConfig":"30"},{"size":11716,"mtime":1660827023247,"results":"32","hashOfConfig":"30"},{"size":5107,"mtime":1643475514942,"results":"33","hashOfConfig":"30"},{"size":7520,"mtime":1643135903917,"results":"34","hashOfConfig":"30"},{"size":660,"mtime":1643465454494,"results":"35","hashOfConfig":"30"},{"size":5606,"mtime":1649018742598,"results":"36","hashOfConfig":"30"},{"size":4332,"mtime":1643453563728,"results":"37","hashOfConfig":"30"},{"size":3090,"mtime":1643453571457,"results":"38","hashOfConfig":"30"},{"size":785,"mtime":1640591722693,"results":"39","hashOfConfig":"30"},{"size":90,"mtime":1636633300695,"results":"40","hashOfConfig":"30"},{"size":2634,"mtime":1660826933188,"results":"41","hashOfConfig":"30"},{"size":830,"mtime":1643158105592,"results":"42","hashOfConfig":"30"},{"size":1835,"mtime":1660826925796,"results":"43","hashOfConfig":"30"},{"size":5739,"mtime":1643529332606,"results":"44","hashOfConfig":"30"},{"size":731,"mtime":1643464758925,"results":"45","hashOfConfig":"30"},{"size":588,"mtime":1643464081231,"results":"46","hashOfConfig":"30"},{"size":987,"mtime":1641917900199,"results":"47","hashOfConfig":"30"},{"size":1026,"mtime":1640591722411,"results":"48","hashOfConfig":"30"},{"size":894,"mtime":1641917925087,"results":"49","hashOfConfig":"30"},{"size":1045,"mtime":1643134907702,"results":"50","hashOfConfig":"30"},{"size":829,"mtime":1640591722430,"results":"51","hashOfConfig":"30"},{"size":320,"mtime":1642686037302,"results":"52","hashOfConfig":"30"},{"size":1439,"mtime":1643157466242,"results":"53","hashOfConfig":"30"},{"size":1886,"mtime":1641917797621,"results":"54","hashOfConfig":"30"},{"size":788,"mtime":1642529829125,"results":"55","hashOfConfig":"30"},{"size":1700,"mtime":1640591722386,"results":"56","hashOfConfig":"30"},{"size":647,"mtime":1643475557281,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p1pf7x",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\index.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\App\\App.js",["118"],"import React from 'react';\r\nimport { Route, Switch, useHistory, Redirect } from 'react-router-dom';\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport ProtectedRouteAuth from '../ProtectedRouteAuth.js/ProtectedRouteAuth';\r\nimport Main from '../Main/Main';\r\nimport ErrorHandler from '../ErrorHandler/ErrorHandler';\r\nimport Register from '../Register/Register';\r\nimport Login from '../Login/Login';\r\nimport Movies from '../Movies/Movies';\r\nimport SavedMovies from '../SavedMovies/SavedMovies';\r\nimport Profile from '../Profile/Profile';\r\nimport * as Auth from '../../utils/Auth';\r\nimport api from '../../utils/MoviesApi';\r\nimport mainApi from '../../utils/MainApi';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\nimport UseInput from '../UseInput/UseInput';\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n  const [moviesInfo, setMoviesInfo] = React.useState([]);\r\n  const [visibleData, setVisibleData] = React.useState([]);\r\n  const [visibleSaveData, setVisibleSaveData] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [savedMovies, setSavedMovies] = React.useState([])\r\n  const [currentUser, setCurrentUser] = React.useState({ name: '', email: '', password: '' });\r\n  const [userData, setUserData] = React.useState({});\r\n  const [confirm, setConfirm] = React.useState(false);\r\n  const [confirmError, setConfirmError] = React.useState(false);\r\n  const [preload, setPreload] = React.useState(false);\r\n  const [onButton, setOnButton] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  const location = history.location.pathname;\r\n\r\n  //Валидация форм поиска по фильмам\r\n  const text = UseInput('', { isEmpty: true, maxLengthError: 30 });\r\n  const textValid = ((text.isDirty && text.isEmpty) || (text.isDirty && text.minLengthError) || (text.isDirty && text.maxLengthError));\r\n\r\n  const [textState, setTextState] = React.useState('');\r\n\r\n\r\n  //Валидация форм поиска по сохранённым фильмам\r\n  const textSave = UseInput('', { isEmpty: true, maxLengthError: 30 });\r\n  const textSaveValid = ((text.isDirty && text.isEmpty) || (text.isDirty && text.minLengthError) || (text.isDirty && text.maxLengthError));\r\n\r\n  //Рендер данных на стр.\r\n  React.useEffect(() => {\r\n    if (loggedIn) {\r\n      const token = localStorage.getItem('jwt');\r\n      if (token) {\r\n        // setPreload(true); // Показываю прелоадер\r\n        Promise.all([mainApi.getUserInfo(token),\r\n        api.getInitialMovies(token),\r\n        ])\r\n          .then(([data, moviesInfo]) => {\r\n            setCurrentUser(data[0]);\r\n            setMoviesInfo(moviesInfo); // Рендер фильмов\r\n            // if (moviesInfo.length > 0) {\r\n            //   setPreload(false); // Скрываю прелоадер\r\n            // }\r\n          })\r\n          .catch((err) => {\r\n            console.error(err)\r\n          })\r\n      }\r\n    }\r\n  }, [loggedIn])\r\n\r\n  // //Сохранение состояния поиска (результат поиска фильмов)\r\n  React.useEffect(() => {\r\n    // setPreload(true);\r\n    setVisibleData(JSON.parse(localStorage.getItem('visibleData')));\r\n    // setPreload(false);\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('visibleData', JSON.stringify(visibleData));\r\n  }, [visibleData]);\r\n\r\n  // Сохранение состояния строки поиска фильмов\r\n  React.useEffect(() => {\r\n    setTextState(JSON.parse(localStorage.getItem('textState')));\r\n  }, [])\r\n  React.useEffect(() => {\r\n    localStorage.setItem('textState', JSON.stringify(textState));\r\n  }, [textState])\r\n\r\n  // Отвечает за то, чтоб у каждого пользователя были свои сохранённые фильмы\r\n  function filterSaveMovies(movies) {\r\n    const myId = currentUser._id;\r\n    const myMovies = movies.filter((movie) => {\r\n      const { owner = '' } = movie;\r\n      return myId === owner;\r\n    });\r\n    return myMovies;\r\n  }\r\n\r\n  // Рендер сохранённых карточек\r\n  React.useEffect(() => {\r\n    const token = localStorage.getItem('jwt');\r\n    if (currentUser) {\r\n      // setPreload(true);\r\n      Promise.resolve(mainApi.getSavedMovies(token))\r\n        .then((savedMovies) => {\r\n          setSavedMovies(filterSaveMovies(savedMovies));  \r\n          // if (savedMovies.length > 0) {\r\n          //   setPreload(false);\r\n          // } \r\n        })\r\n        .catch((err) => {\r\n          console.error(err)\r\n        })\r\n    }\r\n  }, [currentUser])\r\n\r\n  // //Отобразить 16 карточек в сохранённых\r\n  React.useEffect(() => {\r\n    // setPreload(true);\r\n    const arr = savedMovies.slice(0, 16)\r\n    setVisibleSaveData(arr);\r\n    // setPreload(false);\r\n\r\n  }, [savedMovies])\r\n\r\n  // //Добавление карточки App.js\r\n  const handleAddPlaceSubmit = async (movieToSave) => {\r\n    movieToSave = {\r\n      country: movieToSave.country || \"\",\r\n      director: movieToSave.director || \"\",\r\n      duration: movieToSave.duration || 0,\r\n      year: movieToSave.year || \"\",\r\n      description: movieToSave.description || \"\",\r\n      image: movieToSave.image,\r\n      trailer: movieToSave.trailer || \"https://youtube.ru\",\r\n      thumbnail: movieToSave.thumbnail || \"https://youtube.ru\",\r\n      movieId: movieToSave.movieId,\r\n      nameRU: movieToSave.nameRU || \"\",\r\n      nameEN: movieToSave.nameEN || \"\",\r\n    };\r\n    const token = localStorage.getItem('jwt');\r\n    mainApi.addMovie(movieToSave, token)\r\n      .then((newCard) => {\r\n        setSavedMovies([newCard, ...savedMovies]);\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  //Удаление карточки\r\n  const removeCard = (_id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    mainApi.deleteMovies(_id, token)\r\n      .then(() => {\r\n        setSavedMovies([...savedMovies.filter(el => el.movieId !== _id)]);\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  //Чекбокс короткометражки\r\n  React.useEffect(() => {\r\n    setOnButton(JSON.parse(localStorage.getItem('onButton')));\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('onButton', JSON.stringify(onButton));\r\n  }, [onButton]);\r\n\r\n\r\n  //Получение данных пользователя\r\n  const auth = async (jwt) => {\r\n    return Auth.getContent(jwt)\r\n      .then((res) => {\r\n        let resEmail = res.map(i => i.email);\r\n        let resName = res.map(i => i.name);\r\n        // Проверка токена, если токен ваидный записываем данные в state, иначе удаляем токен из localStorage; \r\n        if (res) {\r\n          setLoggedIn(true);\r\n          setUserData({\r\n            email: resEmail.join(''),\r\n            name: resName.join('')\r\n          });\r\n          // history.push(location)\r\n        }\r\n      })\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const jwt = localStorage.getItem('jwt');\r\n    if (jwt) {\r\n      auth(jwt);\r\n      history.push(location);\r\n    }\r\n  }, [history, location, loggedIn]);\r\n\r\n\r\n  //Функция регистрации\r\n  const onRegister = ({ name, email, password }) => {\r\n    return Auth.register(name, email, password)\r\n      .then((res) => {\r\n        if (!res || res.statusCode === 400) throw new Error('Что-то пошло не так')\r\n        return res;\r\n      })\r\n      .then(() => onLogin({ email, password }))\r\n  };\r\n\r\n  //Функция авторизации\r\n  const onLogin = ({ email, password }) => {\r\n    return Auth.login(email, password).then((res) => {\r\n      if (!res.token) throw new Error('Неправильные имя пользователя или пароль');\r\n      else {\r\n        localStorage.setItem('jwt', res.token);\r\n        setLoggedIn(true);\r\n        history.push('/movies')\r\n      }\r\n    })\r\n  };\r\n\r\n  // Выйти из акаунта\r\n  const onSignOut = () => {\r\n    // удаляем токен\r\n    localStorage.removeItem('jwt');\r\n    setLoggedIn(false);\r\n    // обновляю стостояние показанных фильмов\r\n    setVisibleData(localStorage.removeItem('visibleData'));\r\n    // обновляю состояние радмокнипки\r\n    setOnButton(false);\r\n    // очистка строки поиска\r\n    setTextState('')\r\n    // обновляю стостояние показанных фильмов\r\n    const arr = moviesInfo.slice(0, 16)\r\n    setVisibleData(arr);\r\n    // Скидываю сообщение об ошибке/удаче смены пользователя\r\n    setConfirm(false);\r\n    setConfirmError(false);\r\n    history.push('/');\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n  }, [userData])\r\n\r\n  //Редактирование данных пользователя\r\n  const handleUpdateUser = ({ email, name }) => {\r\n    const token = localStorage.getItem('jwt');\r\n    // if (email === currentUser.email) throw new Error('Такой email уже существует')\r\n    mainApi.setUserInfo({ name, email }, token)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        setConfirm(true);\r\n        setConfirmError(false);\r\n      })\r\n      .catch((err) => {\r\n        setConfirm(false);\r\n        setConfirmError(true);\r\n        console.log(err)\r\n      })\r\n  }\r\n  console.log(savedMovies)\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"App\">\r\n        <div className=\"page\">\r\n          <Switch>\r\n            <Route exact loggedIn={loggedIn} path=\"/\">\r\n              <Main loggedIn={loggedIn} />\r\n            </Route>\r\n\r\n            <ProtectedRoute exact loggedIn={loggedIn} path=\"/movies\"\r\n              moviesInfo={moviesInfo} onButton={onButton} setOnButton={setOnButton}\r\n              handleAddPlaceSubmit={handleAddPlaceSubmit}\r\n              setTextState={setTextState} textState={textState}\r\n              visibleData={visibleData} setVisibleData={setVisibleData}\r\n              search={search} setSearch={setSearch} preload={preload}\r\n              text={text} textValid={textValid} removeCard={removeCard} savedMovies={savedMovies} setPreload={setPreload}\r\n              component={Movies} />\r\n\r\n            <ProtectedRoute exact loggedIn={loggedIn} path=\"/saved-movies\"\r\n              setSearch={setSearch} removeCard={removeCard}\r\n              text={textSave} textValid={textSaveValid} savedMovies={savedMovies} setSavedMovies={setSavedMovies}\r\n              visibleSaveData={visibleSaveData} setVisibleSaveData={setVisibleSaveData}\r\n              search={search} moviesInfo={moviesInfo} preload={preload} setPreload={setPreload}\r\n              component={SavedMovies} />\r\n\r\n            <ProtectedRoute exact loggedIn={loggedIn} path=\"/profile\"\r\n              handleUpdateUser={handleUpdateUser}\r\n              onSignOut={onSignOut} setConfirm={setConfirm} setConfirmError={setConfirmError}\r\n              userData={userData} confirm={confirm} confirmError={confirmError}\r\n              component={Profile} />\r\n\r\n            <ProtectedRouteAuth exact loggedIn={loggedIn} path=\"/signup\"\r\n              component={Register} onRegister={onRegister} />\r\n\r\n            <ProtectedRouteAuth exact loggedIn={loggedIn} path=\"/signin\"\r\n              component={Login} onLogin={onLogin} />\r\n\r\n            <Route path='*'>\r\n              <ErrorHandler location={location} />\r\n            </Route>\r\n\r\n            <Route>\r\n              {loggedIn ? <Redirect to=\"/movies\" /> : <Redirect to=\"/\" />}\r\n            </Route>\r\n\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Profile\\Profile.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Main\\Main.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\ErrorHandler\\ErrorHandler.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Movies\\Movies.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Register\\Register.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Login\\Login.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\UseInput\\UseInput.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\utils\\MainApi.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\utils\\MoviesApi.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\utils\\Auth.js",[],["119","120"],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\SavedMovies\\SavedMovies.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\ProtectedRouteAuth.js\\ProtectedRouteAuth.js",["121"],"import React from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\n\r\n\r\n// этот компонент принимает другой компонент в качестве пропса\r\n// он также может взять неограниченное число пропсов и передать их новому компоненту\r\n\r\nconst ProtectedRouteAuth = ({ component: Component, ...rest }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Route {...rest} render={props => !rest.loggedIn ? <Component {...props} {...rest} /> : history.push('/')} />\r\n    // Почему-то в этом месте не работает <Redirect to='/' />\r\n)}\r\n\r\nexport default ProtectedRouteAuth;","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\ProtectedRoute\\ProtectedRoute.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Header\\Header.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Footer\\Footer.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\HeaderMain\\HeaderMain.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\HeaderAuthorize\\HeaderAuthorize.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\From\\Form.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Preloader\\Preloader.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\AllMoviesCard\\AllMoviesCard.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\UseValidation\\UseValidation.js",["122"],"import React from \"react\";\r\n\r\nconst UseValidation = (value, validations) => {\r\n    const [isEmpty, setEmpty] = React.useState(true);\r\n    const [minLengthError, setMinLengthError] = React.useState(false);\r\n    const [maxLengthError, setMaxLengthError] = React.useState(false);\r\n    const [emailError, setEmailError] = React.useState(false);\r\n    const [inputValid, setInputValid] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLengthError':\r\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\r\n                    break;\r\n                case 'isEmpty':\r\n                    value ? setEmpty(false) : setEmpty(true)\r\n                    break;\r\n                case 'maxLengthError':\r\n                    value.length > validations[validation] ? setMaxLengthError(true) : setMaxLengthError(false)\r\n                    break;\r\n                case 'isEmail':\r\n                    const re = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\\\\\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\\\\\"]{2,})$/i;\r\n                    re.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    //Валидация кнопки\r\n    React.useEffect(() => {\r\n        if (isEmpty || maxLengthError || minLengthError || emailError) {\r\n            setInputValid(false);\r\n        } else {\r\n            setInputValid(true);\r\n        }\r\n    }, [isEmpty, maxLengthError, minLengthError, emailError])\r\n\r\n    return {\r\n        isEmpty,\r\n        minLengthError,\r\n        maxLengthError,\r\n        emailError,\r\n        inputValid,\r\n    }\r\n}\r\n\r\nexport default UseValidation;","C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\MyMoviesCard\\MyMoviesCard.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\Burger\\Burger.js",[],"C:\\Users\\Сергей\\Yandex-praktikum\\Diplom\\movies-explorer-frontend\\src\\componenst\\MoviesCard\\MoviesCard.js",[],{"ruleId":"123","severity":1,"message":"124","line":114,"column":6,"nodeType":"125","endLine":114,"endColumn":19,"suggestions":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":25},{"ruleId":"123","severity":1,"message":"135","line":30,"column":8,"nodeType":"125","endLine":30,"endColumn":15,"suggestions":"136"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filterSaveMovies'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","React Hook React.useEffect has a missing dependency: 'validations'. Either include it or remove the dependency array.",["140"],{"desc":"141","fix":"142"},"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [currentUser, filterSaveMovies]",{"range":"145","text":"146"},"Update the dependencies array to be: [validations, value]",{"range":"147","text":"148"},[4329,4342],"[currentUser, filterSaveMovies]",[1404,1411],"[validations, value]"]